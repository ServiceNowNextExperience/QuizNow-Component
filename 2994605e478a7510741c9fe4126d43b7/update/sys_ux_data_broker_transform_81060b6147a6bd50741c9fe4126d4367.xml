<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ux_data_broker_transform">
    <sys_ux_data_broker_transform action="INSERT_OR_UPDATE">
        <acl_failure_result/>
        <api_name>x_snc_quiznow.Get Quiz Structure</api_name>
        <description/>
        <mutates_server_data>false</mutates_server_data>
        <name>Get Quiz Structure</name>
        <output_schema/>
        <private>false</private>
        <props>[&#13;
        {&#13;
            "name": "quizId",&#13;
            "label": "Quiz",&#13;
            "mandatory": true,&#13;
            "description": "Choose a quiz.",&#13;
            "readOnly": false,&#13;
            "fieldType": "reference",&#13;
            "typeMetadata": {&#13;
                    "reference": "x_snc_quiznow_quiz"&#13;
            }&#13;
        }&#13;
]</props>
        <required_translations>[ {
  "message" : "Choose a quiz.",
  "comment" : ""
}, {
  "message" : "Quiz",
  "comment" : ""
} ]</required_translations>
        <schema_version>1.0.0</schema_version>
        <script><![CDATA[function transform(input) {
    var quizID = input.quizId;
	var quizTable = 'x_snc_quiznow_quiz';
    var quizQuestionTable = 'x_snc_quiznow_quiz_question';
    var quizQuestionChoiceTable = 'x_snc_quiznow_quiz_question_choice';
    var quizObj = {
        'quizFields': {},
        'quizQuestions': []
    };
    var quizQuestionArr = [];

    var quizGR = new GlideRecord(quizTable);
    if (quizGR.get(quizID)) {
        quizObj.quizFields = {
            'name': quizGR.getValue('name'),
            'id': quizGR.getValue('sys_id'),
            'owner': quizGR.owner.getDisplayValue()
        }
        var quizQuestionGR = new GlideRecord(quizQuestionTable);
        quizQuestionGR.addQuery('quiz', quizID);
        quizQuestionGR.orderBy('order');
        quizQuestionGR.query();
        while (quizQuestionGR.next()) {
            var quizQuestionObj = {
                'question': quizQuestionGR.getValue('question'),
                'id': quizQuestionGR.getValue('sys_id'),
                'image': quizQuestionGR.image.getDisplayValue(),
                'order': quizQuestionGR.getValue('order'),
                'questionChoices': []
            };
            var quizQuestionChoiceGR = new GlideRecord(quizQuestionChoiceTable);
            quizQuestionChoiceGR.addQuery('question', quizQuestionObj.id);
            quizQuestionChoiceGR.orderBy('order');
            quizQuestionChoiceGR.query();
            while (quizQuestionChoiceGR.next()) {
                var questionChoiceObj = {
                    'choice': quizQuestionChoiceGR.getValue('choice'),
                    'id': quizQuestionChoiceGR.getValue('sys_id'),
                    'correctAnswer': quizQuestionChoiceGR.getValue('correct_answer'),
                    'order': quizQuestionChoiceGR.getValue('order')
                }
                quizQuestionObj.questionChoices.push(questionChoiceObj);
            }
            quizObj.quizQuestions.push(quizQuestionObj);
        }
    }

	return quizObj;

}]]></script>
        <sys_class_name>sys_ux_data_broker_transform</sys_class_name>
        <sys_created_by>brad.tilton</sys_created_by>
        <sys_created_on>2023-11-16 21:19:11</sys_created_on>
        <sys_id>81060b6147a6bd50741c9fe4126d4367</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>Get Quiz Structure</sys_name>
        <sys_package display_value="QuizNow" source="x_snc_quiznow">2994605e478a7510741c9fe4126d43b7</sys_package>
        <sys_policy/>
        <sys_scope display_value="QuizNow">2994605e478a7510741c9fe4126d43b7</sys_scope>
        <sys_update_name>sys_ux_data_broker_transform_81060b6147a6bd50741c9fe4126d4367</sys_update_name>
        <sys_updated_by>brad.tilton</sys_updated_by>
        <sys_updated_on>2023-11-16 21:22:54</sys_updated_on>
    </sys_ux_data_broker_transform>
    <sys_translated_text action="delete_multiple" query="documentkey=81060b6147a6bd50741c9fe4126d4367"/>
</record_update>
